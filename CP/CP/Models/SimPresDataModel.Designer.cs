//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SimPresModel", "FK_Slides_Contents", "Contents", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CP.Models.Content), "Slides", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CP.Models.Slide), true)]
[assembly: EdmRelationshipAttribute("SimPresModel", "FK_Presentations_Presentations", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CP.Models.User), "Presentations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CP.Models.Presentation), true)]
[assembly: EdmRelationshipAttribute("SimPresModel", "FK_Ratings_Presentations", "Presentations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CP.Models.Presentation), "Ratings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CP.Models.Rating), true)]
[assembly: EdmRelationshipAttribute("SimPresModel", "FK_Slides_Presentations", "Presentations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CP.Models.Presentation), "Slides", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CP.Models.Slide), true)]
[assembly: EdmRelationshipAttribute("SimPresModel", "FK_Ratings_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CP.Models.User), "Ratings", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CP.Models.Rating), true)]
[assembly: EdmRelationshipAttribute("SimPresModel", "FK_Slides_Titles", "Titles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CP.Models.Title), "Slides", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CP.Models.Slide), true)]

#endregion

namespace CP.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SimPresEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SimPresEntities object using the connection string found in the 'SimPresEntities' section of the application configuration file.
        /// </summary>
        public SimPresEntities() : base("name=SimPresEntities", "SimPresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SimPresEntities object.
        /// </summary>
        public SimPresEntities(string connectionString) : base(connectionString, "SimPresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SimPresEntities object.
        /// </summary>
        public SimPresEntities(EntityConnection connection) : base(connection, "SimPresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Presentation> Presentations
        {
            get
            {
                if ((_Presentations == null))
                {
                    _Presentations = base.CreateObjectSet<Presentation>("Presentations");
                }
                return _Presentations;
            }
        }
        private ObjectSet<Presentation> _Presentations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rating> Ratings
        {
            get
            {
                if ((_Ratings == null))
                {
                    _Ratings = base.CreateObjectSet<Rating>("Ratings");
                }
                return _Ratings;
            }
        }
        private ObjectSet<Rating> _Ratings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Slide> Slides
        {
            get
            {
                if ((_Slides == null))
                {
                    _Slides = base.CreateObjectSet<Slide>("Slides");
                }
                return _Slides;
            }
        }
        private ObjectSet<Slide> _Slides;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Title> Titles
        {
            get
            {
                if ((_Titles == null))
                {
                    _Titles = base.CreateObjectSet<Title>("Titles");
                }
                return _Titles;
            }
        }
        private ObjectSet<Title> _Titles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Presentations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPresentations(Presentation presentation)
        {
            base.AddObject("Presentations", presentation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ratings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRatings(Rating rating)
        {
            base.AddObject("Ratings", rating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Slides EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSlides(Slide slide)
        {
            base.AddObject("Slides", slide);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Titles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTitles(Title title)
        {
            base.AddObject("Titles", title);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="font">Initial value of the Font property.</param>
        /// <param name="fontSize">Initial value of the FontSize property.</param>
        /// <param name="fontColor">Initial value of the FontColor property.</param>
        /// <param name="fontStyle">Initial value of the FontStyle property.</param>
        public static Content CreateContent(global::System.Guid contentId, global::System.String text, global::System.String font, global::System.Int32 fontSize, global::System.String fontColor, global::System.String fontStyle)
        {
            Content content = new Content();
            content.ContentId = contentId;
            content.Text = text;
            content.Font = font;
            content.FontSize = fontSize;
            content.FontColor = fontColor;
            content.FontStyle = fontStyle;
            return content;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                if (_ContentId != value)
                {
                    OnContentIdChanging(value);
                    ReportPropertyChanging("ContentId");
                    _ContentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentId");
                    OnContentIdChanged();
                }
            }
        }
        private global::System.Guid _ContentId;
        partial void OnContentIdChanging(global::System.Guid value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Font
        {
            get
            {
                return _Font;
            }
            set
            {
                OnFontChanging(value);
                ReportPropertyChanging("Font");
                _Font = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Font");
                OnFontChanged();
            }
        }
        private global::System.String _Font;
        partial void OnFontChanging(global::System.String value);
        partial void OnFontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FontSize
        {
            get
            {
                return _FontSize;
            }
            set
            {
                OnFontSizeChanging(value);
                ReportPropertyChanging("FontSize");
                _FontSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FontSize");
                OnFontSizeChanged();
            }
        }
        private global::System.Int32 _FontSize;
        partial void OnFontSizeChanging(global::System.Int32 value);
        partial void OnFontSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FontColor
        {
            get
            {
                return _FontColor;
            }
            set
            {
                OnFontColorChanging(value);
                ReportPropertyChanging("FontColor");
                _FontColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FontColor");
                OnFontColorChanged();
            }
        }
        private global::System.String _FontColor;
        partial void OnFontColorChanging(global::System.String value);
        partial void OnFontColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FontStyle
        {
            get
            {
                return _FontStyle;
            }
            set
            {
                OnFontStyleChanging(value);
                ReportPropertyChanging("FontStyle");
                _FontStyle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FontStyle");
                OnFontStyleChanged();
            }
        }
        private global::System.String _FontStyle;
        partial void OnFontStyleChanging(global::System.String value);
        partial void OnFontStyleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Slides_Contents", "Slides")]
        public EntityCollection<Slide> Slides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slide>("SimPresModel.FK_Slides_Contents", "Slides");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slide>("SimPresModel.FK_Slides_Contents", "Slides", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="Presentation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Presentation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Presentation object.
        /// </summary>
        /// <param name="presentationId">Initial value of the PresentationId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="about">Initial value of the About property.</param>
        /// <param name="dateOfCreate">Initial value of the DateOfCreate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Presentation CreatePresentation(global::System.Guid presentationId, global::System.String name, global::System.String about, global::System.DateTime dateOfCreate, global::System.Guid userId)
        {
            Presentation presentation = new Presentation();
            presentation.PresentationId = presentationId;
            presentation.Name = name;
            presentation.About = about;
            presentation.DateOfCreate = dateOfCreate;
            presentation.UserId = userId;
            return presentation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PresentationId
        {
            get
            {
                return _PresentationId;
            }
            set
            {
                if (_PresentationId != value)
                {
                    OnPresentationIdChanging(value);
                    ReportPropertyChanging("PresentationId");
                    _PresentationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PresentationId");
                    OnPresentationIdChanged();
                }
            }
        }
        private global::System.Guid _PresentationId;
        partial void OnPresentationIdChanging(global::System.Guid value);
        partial void OnPresentationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfCreate
        {
            get
            {
                return _DateOfCreate;
            }
            set
            {
                OnDateOfCreateChanging(value);
                ReportPropertyChanging("DateOfCreate");
                _DateOfCreate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfCreate");
                OnDateOfCreateChanged();
            }
        }
        private global::System.DateTime _DateOfCreate;
        partial void OnDateOfCreateChanging(global::System.DateTime value);
        partial void OnDateOfCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Presentations_Presentations", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SimPresModel.FK_Presentations_Presentations", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SimPresModel.FK_Presentations_Presentations", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SimPresModel.FK_Presentations_Presentations", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SimPresModel.FK_Presentations_Presentations", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Ratings_Presentations", "Ratings")]
        public EntityCollection<Rating> Ratings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rating>("SimPresModel.FK_Ratings_Presentations", "Ratings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rating>("SimPresModel.FK_Ratings_Presentations", "Ratings", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Slides_Presentations", "Slides")]
        public EntityCollection<Slide> Slides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slide>("SimPresModel.FK_Slides_Presentations", "Slides");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slide>("SimPresModel.FK_Slides_Presentations", "Slides", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="Rating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rating object.
        /// </summary>
        /// <param name="ratingId">Initial value of the RatingId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="presentationId">Initial value of the PresentationId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Rating CreateRating(global::System.Guid ratingId, global::System.Guid userId, global::System.Guid presentationId, global::System.Int32 value)
        {
            Rating rating = new Rating();
            rating.RatingId = ratingId;
            rating.UserId = userId;
            rating.PresentationId = presentationId;
            rating.Value = value;
            return rating;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RatingId
        {
            get
            {
                return _RatingId;
            }
            set
            {
                if (_RatingId != value)
                {
                    OnRatingIdChanging(value);
                    ReportPropertyChanging("RatingId");
                    _RatingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RatingId");
                    OnRatingIdChanged();
                }
            }
        }
        private global::System.Guid _RatingId;
        partial void OnRatingIdChanging(global::System.Guid value);
        partial void OnRatingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PresentationId
        {
            get
            {
                return _PresentationId;
            }
            set
            {
                OnPresentationIdChanging(value);
                ReportPropertyChanging("PresentationId");
                _PresentationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationId");
                OnPresentationIdChanged();
            }
        }
        private global::System.Guid _PresentationId;
        partial void OnPresentationIdChanging(global::System.Guid value);
        partial void OnPresentationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Ratings_Presentations", "Presentations")]
        public Presentation Presentation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentation>("SimPresModel.FK_Ratings_Presentations", "Presentations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentation>("SimPresModel.FK_Ratings_Presentations", "Presentations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Presentation> PresentationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentation>("SimPresModel.FK_Ratings_Presentations", "Presentations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Presentation>("SimPresModel.FK_Ratings_Presentations", "Presentations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Ratings_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SimPresModel.FK_Ratings_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SimPresModel.FK_Ratings_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("SimPresModel.FK_Ratings_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("SimPresModel.FK_Ratings_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="Slide")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Slide : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Slide object.
        /// </summary>
        /// <param name="slideId">Initial value of the SlideId property.</param>
        /// <param name="presentationId">Initial value of the PresentationId property.</param>
        /// <param name="fonColor">Initial value of the FonColor property.</param>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="contentId">Initial value of the ContentId property.</param>
        /// <param name="slideNumber">Initial value of the SlideNumber property.</param>
        public static Slide CreateSlide(global::System.Guid slideId, global::System.Guid presentationId, global::System.String fonColor, global::System.Guid titleId, global::System.Guid contentId, global::System.Int32 slideNumber)
        {
            Slide slide = new Slide();
            slide.SlideId = slideId;
            slide.PresentationId = presentationId;
            slide.FonColor = fonColor;
            slide.TitleId = titleId;
            slide.ContentId = contentId;
            slide.SlideNumber = slideNumber;
            return slide;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SlideId
        {
            get
            {
                return _SlideId;
            }
            set
            {
                if (_SlideId != value)
                {
                    OnSlideIdChanging(value);
                    ReportPropertyChanging("SlideId");
                    _SlideId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlideId");
                    OnSlideIdChanged();
                }
            }
        }
        private global::System.Guid _SlideId;
        partial void OnSlideIdChanging(global::System.Guid value);
        partial void OnSlideIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PresentationId
        {
            get
            {
                return _PresentationId;
            }
            set
            {
                OnPresentationIdChanging(value);
                ReportPropertyChanging("PresentationId");
                _PresentationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresentationId");
                OnPresentationIdChanged();
            }
        }
        private global::System.Guid _PresentationId;
        partial void OnPresentationIdChanging(global::System.Guid value);
        partial void OnPresentationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FonColor
        {
            get
            {
                return _FonColor;
            }
            set
            {
                OnFonColorChanging(value);
                ReportPropertyChanging("FonColor");
                _FonColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FonColor");
                OnFonColorChanged();
            }
        }
        private global::System.String _FonColor;
        partial void OnFonColorChanging(global::System.String value);
        partial void OnFonColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                OnTitleIdChanging(value);
                ReportPropertyChanging("TitleId");
                _TitleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TitleId");
                OnTitleIdChanged();
            }
        }
        private global::System.Guid _TitleId;
        partial void OnTitleIdChanging(global::System.Guid value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContentId
        {
            get
            {
                return _ContentId;
            }
            set
            {
                OnContentIdChanging(value);
                ReportPropertyChanging("ContentId");
                _ContentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentId");
                OnContentIdChanged();
            }
        }
        private global::System.Guid _ContentId;
        partial void OnContentIdChanging(global::System.Guid value);
        partial void OnContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlideNumber
        {
            get
            {
                return _SlideNumber;
            }
            set
            {
                OnSlideNumberChanging(value);
                ReportPropertyChanging("SlideNumber");
                _SlideNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlideNumber");
                OnSlideNumberChanged();
            }
        }
        private global::System.Int32 _SlideNumber;
        partial void OnSlideNumberChanging(global::System.Int32 value);
        partial void OnSlideNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Slides_Contents", "Contents")]
        public Content Content
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SimPresModel.FK_Slides_Contents", "Contents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SimPresModel.FK_Slides_Contents", "Contents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Content> ContentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Content>("SimPresModel.FK_Slides_Contents", "Contents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Content>("SimPresModel.FK_Slides_Contents", "Contents", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Slides_Presentations", "Presentations")]
        public Presentation Presentation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentation>("SimPresModel.FK_Slides_Presentations", "Presentations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentation>("SimPresModel.FK_Slides_Presentations", "Presentations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Presentation> PresentationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Presentation>("SimPresModel.FK_Slides_Presentations", "Presentations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Presentation>("SimPresModel.FK_Slides_Presentations", "Presentations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Slides_Titles", "Titles")]
        public Title Title
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("SimPresModel.FK_Slides_Titles", "Titles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("SimPresModel.FK_Slides_Titles", "Titles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Title> TitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Title>("SimPresModel.FK_Slides_Titles", "Titles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Title>("SimPresModel.FK_Slides_Titles", "Titles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="Title")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Title : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Title object.
        /// </summary>
        /// <param name="titleId">Initial value of the TitleId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="font">Initial value of the Font property.</param>
        /// <param name="fontSize">Initial value of the FontSize property.</param>
        /// <param name="fontColor">Initial value of the FontColor property.</param>
        /// <param name="fontStyle">Initial value of the FontStyle property.</param>
        public static Title CreateTitle(global::System.Guid titleId, global::System.String text, global::System.String font, global::System.Int32 fontSize, global::System.String fontColor, global::System.String fontStyle)
        {
            Title title = new Title();
            title.TitleId = titleId;
            title.Text = text;
            title.Font = font;
            title.FontSize = fontSize;
            title.FontColor = fontColor;
            title.FontStyle = fontStyle;
            return title;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TitleId
        {
            get
            {
                return _TitleId;
            }
            set
            {
                if (_TitleId != value)
                {
                    OnTitleIdChanging(value);
                    ReportPropertyChanging("TitleId");
                    _TitleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TitleId");
                    OnTitleIdChanged();
                }
            }
        }
        private global::System.Guid _TitleId;
        partial void OnTitleIdChanging(global::System.Guid value);
        partial void OnTitleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Font
        {
            get
            {
                return _Font;
            }
            set
            {
                OnFontChanging(value);
                ReportPropertyChanging("Font");
                _Font = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Font");
                OnFontChanged();
            }
        }
        private global::System.String _Font;
        partial void OnFontChanging(global::System.String value);
        partial void OnFontChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FontSize
        {
            get
            {
                return _FontSize;
            }
            set
            {
                OnFontSizeChanging(value);
                ReportPropertyChanging("FontSize");
                _FontSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FontSize");
                OnFontSizeChanged();
            }
        }
        private global::System.Int32 _FontSize;
        partial void OnFontSizeChanging(global::System.Int32 value);
        partial void OnFontSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FontColor
        {
            get
            {
                return _FontColor;
            }
            set
            {
                OnFontColorChanging(value);
                ReportPropertyChanging("FontColor");
                _FontColor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FontColor");
                OnFontColorChanged();
            }
        }
        private global::System.String _FontColor;
        partial void OnFontColorChanging(global::System.String value);
        partial void OnFontColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FontStyle
        {
            get
            {
                return _FontStyle;
            }
            set
            {
                OnFontStyleChanging(value);
                ReportPropertyChanging("FontStyle");
                _FontStyle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FontStyle");
                OnFontStyleChanged();
            }
        }
        private global::System.String _FontStyle;
        partial void OnFontStyleChanging(global::System.String value);
        partial void OnFontStyleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Slides_Titles", "Slides")]
        public EntityCollection<Slide> Slides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slide>("SimPresModel.FK_Slides_Titles", "Slides");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slide>("SimPresModel.FK_Slides_Titles", "Slides", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SimPresModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="about">Initial value of the About property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        public static User CreateUser(global::System.Guid userId, global::System.String login, global::System.String email, global::System.String about, global::System.DateTime registrationDate)
        {
            User user = new User();
            user.UserId = userId;
            user.Login = login;
            user.Email = email;
            user.About = about;
            user.RegistrationDate = registrationDate;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Presentations_Presentations", "Presentations")]
        public EntityCollection<Presentation> Presentations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Presentation>("SimPresModel.FK_Presentations_Presentations", "Presentations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Presentation>("SimPresModel.FK_Presentations_Presentations", "Presentations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SimPresModel", "FK_Ratings_Users", "Ratings")]
        public EntityCollection<Rating> Ratings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rating>("SimPresModel.FK_Ratings_Users", "Ratings");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rating>("SimPresModel.FK_Ratings_Users", "Ratings", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
