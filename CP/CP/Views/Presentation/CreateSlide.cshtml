<script src="@Url.Content("~/Content/jscripts/DrawScript.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/iColorPicker.js")" type="text/javascript"></script>
<script type="text/javascript">
    </script>

@model CP.Models.SlideModel
@{
    ViewBag.Title = "CreateSlide";
}
<h2>
    CreateSlide</h2>
<div>
    <canvas id="myCanvas" width="800" height="600">
    </canvas>
</div>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Ошибка при создании слайда. Пожалуйста, испаравьте ошибки и попробуйте снова.")
    <p>
        @Html.LabelFor(m => m.SlideNumber, "Slide #" + Model.SlideNumber);
    </p>
    <p>
        <input type="hidden" name="PresentationId" value="@Model.PresentationId" />
        <input type="hidden" name="SlideNumber" value="@Model.SlideNumber" />
        @Html.LabelFor(m => m.FonColor, "Цвет фона слайда");
        @Html.TextBoxFor(m => m.FonColor, new { @class = "iColorPicker", id = "slideFonColor" });
    </p>
    <!--<input id="slideFonColor" name="mycolor" type="text" value="#ffcc00" class="iColorPicker" /> -->
    <p>
        @Html.LabelFor(m => m.TitleOfSlide.Text, "Заголовок слайда");
        @Html.TextBoxFor(m => m.TitleOfSlide.Text, new { id = "titleText", name = "titleText", value = "" });
        @Html.LabelFor(m => m.TitleOfSlide.FontSize, "Размер шрифта заголовка");
        @Html.ListBoxFor(m => m.TitleOfSlide.FontSize, new SelectList(new List<string>() { "" }), new { name = "titleFontSize", id = "titleFontSize" });
        @Html.LabelFor(m => m.TitleOfSlide.FontColor, "Цвет заголовка");
        @Html.TextBoxFor(m => m.TitleOfSlide.FontColor, new { @class = "iColorPicker", id = "titleFontColor" });
        @Html.Hidden("TitleOfSlide.Font", "serif", new { id = "titleFontFamily" });
        @Html.Hidden("TitleOfSlide.FontStyle", "normal", new { id = "titleFontStyle" });
    </p>
    <p />
    <p>
        @Html.LabelFor(m => m.ContentOfSlide.Text, "Текст слайда");
        @Html.TextBoxFor(m => m.ContentOfSlide.Text, new { id = "contentText", name = "contentText", value = "" });
        @Html.LabelFor(m => m.ContentOfSlide.FontSize, "Размер шрифта содержимого");
        @Html.ListBoxFor(m => m.ContentOfSlide.FontSize, new SelectList(new List<string>() { "" }), new { name = "contentFontSize", id = "contentFontSize", value = "" });
        @Html.LabelFor(m => m.ContentOfSlide.FontColor, "Цвет содержимого");
        @Html.TextBoxFor(m => m.ContentOfSlide.FontColor, new { @class = "iColorPicker", id = "contentFontColor" });
        @Html.Hidden("ContentOfSlide.Font", "serif", new { id = "contentFontFamily" });
        @Html.Hidden("ContentOfSlide.FontStyle", "normal", new { id = "contentFontStyle" });
    </p>
    <p>
        <input id="viewSlide" type="button" value="Просмотр" onclick="DrawSlide()" />
        <input type="submit" value="Сохранить слайд и перейти к редактированию следующего" />  
        @Html.ActionLink("Закончить создание презентации", "FinishPresentation");
    </p>
}
<script type="text/javascript">
    var fontSizeList = document.getElementById("titleFontSize");
    for (var i = 1; i <= 72; i++) {
        var newSize = document.createElement("option");
        newSize.appendChild(document.createTextNode(i));
        newSize.setAttribute("value", i);
        fontSizeList.appendChild(newSize);
    }
</script>
<script type="text/javascript">
    var fontSizeList = document.getElementById("contentFontSize");
    for (var i = 1; i <= 72; i++) {
        var newSize = document.createElement("option");
        newSize.appendChild(document.createTextNode(i));
        newSize.setAttribute("value", i);
        fontSizeList.appendChild(newSize);
    }
</script>
